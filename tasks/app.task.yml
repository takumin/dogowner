---
# https://taskfile.dev

version: '3'

vars:
  PKGNAME:
    sh: go mod edit -json | jq -r '.Module.Path'

  RAW_VERSION:
    sh: git describe --tags --abbrev=0 2>/dev/null || echo 'v0.0.0'
  COMMIT_ID:
    sh: git rev-parse HEAD 2>/dev/null || exit 0

  VERSION: '{{trimPrefix "v" .RAW_VERSION}}'
  REVISION: '{{.COMMIT_ID}}'
  PRERELEASE: '{{.PRERELEASE | default "dev" .PRERELEASE}}'
  FULLVERSION: '{{.VERSION}}{{if ne "" .PRERELEASE}}-{{.PRERELEASE}}{{end}}'

  LDFLAGS_VERSION: -X "{{.PKGNAME}}/internal/version.version={{.VERSION}}"
  LDFLAGS_REVISION: -X "{{.PKGNAME}}/internal/version.revision={{.REVISION}}"
  LDFLAGS_PRERELEASE: -X "{{.PKGNAME}}/internal/version.prerelease={{.PRERELEASE}}"
  LDFLAGS_VARIABLES: '{{.LDFLAGS_VERSION}} {{.LDFLAGS_REVISION}} {{.LDFLAGS_PRERELEASE}}'
  BUILDFLAGS: -trimpath -ldflags '-s -w -buildid= {{.LDFLAGS_VARIABLES}} -extldflags -static'

tasks:
  default:
    silent: true
    deps:
    - mod
    - test
    - build

  clean:
    run: once
    cmds:
    - rm -f coverage.out
    - rm -f coverage.html
    - rm -fr bin

  mod:
    run: once
    sources:
    - '**/go.mod'
    - '**/go.sum'
    generates:
    - .task/.done_{{.TASK}}
    cmds:
    - go mod download
    - go mod tidy
    - go mod verify
    - cmd: touch .task/.done_{{.TASK}}
      silent: true

  test:
    run: once
    deps: [mod]
    sources:
    - '**/go.mod'
    - '**/go.sum'
    - '**/*.go'
    generates:
    - coverage.out
    - coverage.html
    cmds:
    - go test -race {{.BUILDFLAGS}} -cover -covermode atomic -coverprofile=coverage.out ./...
    - go tool cover -html=coverage.out -o coverage.html

  build:
    run: once
    deps: [mod]
    sources:
    - '**/go.mod'
    - '**/go.sum'
    - '**/*.go'
    - exclude: '**/*_test.go'
    generates:
    - bin/{{.BINNAME}}
    vars:
      GOOS: '{{default OS .GOOS}}'
      GOARCH: '{{default ARCH .GOARCH}}'
      BINEXE: '{{if eq .GOOS "windows"}}.exe{{end}}'
      BINNAME: '{{base .ROOT_DIR}}_v{{.FULLVERSION}}_{{.GOOS}}_{{.GOARCH}}{{.BINEXE}}'
    env:
      CGO_ENABLED: 0
      GOOS: '{{.GOOS}}'
      GOARCH: '{{.GOARCH}}'
    cmds:
    - go build {{.BUILDFLAGS}} -o bin/{{.BINNAME}}

  build:darwin:amd64:
    cmds:
    - task: build
      vars:
        GOOS: darwin
        GOARCH: amd64

  build:darwin:arm64:
    cmds:
    - task: build
      vars:
        GOOS: darwin
        GOARCH: arm64

  build:linux:amd64:
    cmds:
    - task: build
      vars:
        GOOS: linux
        GOARCH: amd64

  build:linux:arm64:
    cmds:
    - task: build
      vars:
        GOOS: linux
        GOARCH: arm64

  build:windows:amd64:
    cmds:
    - task: build
      vars:
        GOOS: windows
        GOARCH: amd64

  build:windows:arm64:
    cmds:
    - task: build
      vars:
        GOOS: windows
        GOARCH: arm64
